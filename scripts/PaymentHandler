#!/usr/bin/env perl
use strict;
use warnings;
use Mojolicious::Lite -signatures;
use Mojo::File qw(curfile);
use lib curfile->dirname->sibling('lib')->to_string;
use Controller::PaymentProcessor;

plugin Minion => { Redis => 'redis://redis:6379' };

get '/' => sub ($c) {
  my $controller= Controller::PaymentProcessor->new();
  $c->render(json=>{data => $controller->{test} ,status=>200});
};

# POST /payments
# {
#     "correlationId": "4a7901b8-7d26-4d9d-aa19-4dc1c7cf60b3",
#     "amount": 19.90
# }

post '/payments' => sub ($c) {
  # pegar a requisiÃ§Ã£o para processar o pagamento, e jogar para uma fila do redis.
  $c->render(json => {data => 1, status => 200});
};

# GET /payments-summary?from=2020-07-10T12:34:56.000Z&to=2020-07-10T12:35:56.000Z
# Retornar
# HTTP 200 - Ok
# {
#     "default" : {
#         "totalRequests": 43236,
#         "totalAmount": 415542345.98
#     },
#     "fallback" : {
#         "totalRequests": 423545,
#         "totalAmount": 329347.34
#     }
# }

get '/payments-summary' => sub ($c) {
  # devolver os valores dos pagamentos
  $c->render(json => {data => 1, status => 200});
};


app->start;
